trigger:
  branches:
    include:
      - main

pool:
  name: 'mycomputeragent'



steps:

  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'SonarCloud Service'
      organization: '21022609-gang'
      scannerMode: 'MSBuild'
      ProjectKey: '21022609-Gang_FYP_Project'
      ProjectName: 'FYP_Project'
  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '/workspaces/FYP_Project/OurWebApp/*.csproj'
      feedsToUse: 'select'
      vstsFeed: 'e532e879-2c5f-49fa-8d91-4c53aac3a2ec'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '/workspaces/FYP_Project/OurWebApp/*.csproj'

  - script: echo testing
    displayName: Test

  - script: |
      echo this is the hostname:
      echo -----------------------
      echo $HOSTNAME
    displayName: Test Script 2

  - task: DotNetCoreCLI@2
    inputs:
      command: 'test'
      projects: '/workspaces/FYP_Project/OurWebApp/*.csproj'
      arguments: '--collect "Code Coverage"'

  - task: SonarCloudAnalyze@1

  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'
    
  - task: WhiteSource@21
    inputs:
      cwd: '$(System.DefaultWorkingDirectory)'

  - task: Docker@2
    inputs:
        containerRegistry: 'Docker Hub'
        repository: 'denisepzq/fpy/customerapi'
        command: 'build'
        Dockerfile: '**/CustomerApi/CustomerApi/Dockerfile'
        tags: '$(Build.BuildId)'
        arguments: '--build-arg ARG_NAME=ARG_VALUE'
        displayName: 'Build the Docker image'
          
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker Hub'
        repository: 'denisepzq/fpy/customerapi'
        command: 'push'
        tags: '$(Build.BuildId)'
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
        displayName: 'Push the Docker image to Docker Hub'